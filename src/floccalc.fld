# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include <stdio.h>} {private local
}

decl {\#include <stdlib.h>} {private local
}

decl {\#include <string.h>} {private local
}

decl {\#include <time.h>} {private local
}

decl {\#include <stdlib.h>} {private local
}

decl {\#include <unistd.h>} {private local
}

decl {\#include <dirent.h>} {private local
}

decl {\#include <limits.h>} {private local
}

Function {fexist( const char *a_option )} {open return_type int
} {
  code {char dir1[PATH_MAX]; 
	char *dir2;
	DIR *dip;
	strncpy( dir1 , "",  PATH_MAX  );
	strncpy( dir1 , a_option,  PATH_MAX  );

	struct stat st_buf; 
	int status; 
	int fileordir = 0 ; 

	status = stat ( dir1 , &st_buf);
	if (status != 0) {
		fileordir = 0;
	}
	FILE *fp2check = fopen( dir1  ,"r");
	if( fp2check ) {
		fileordir = 1; 
		fclose(fp2check);
	} 

	if (S_ISDIR (st_buf.st_mode)) {
		fileordir = 2; 
	}
	return fileordir;
	/////////////////////////////} {}
}

decl {\#include <time.h>} {private local
}

Function {make_window()} {open
} {
  Fl_Window win3 {
    label FLOCCALC open
    xywh {605 445 795 275} type Double box THIN_UP_BOX resizable visible
  } {
    Fl_Box {} {
      label {My Project}
      xywh {5 5 785 25} box THIN_UP_BOX labelfont 1
    }
    Fl_Button {} {
      label {&Quit}
      callback {win3->hide();} selected
      xywh {10 240 775 25} labelfont 1
    }
    Fl_Group {} {
      label Templates open
      xywh {10 60 775 165} box BORDER_BOX
    } {
      Fl_Button {} {
        label {&Binary Calculation}
        callback {system(  "    screen -d -m  floccalc-binary  " );}
        image {../../../../nuvola/32x32/apps/ooo_gulls.png} xywh {20 85 200 115} labelfont 1
      }
    }
  }
  code {win3->show();} {}
}

Function {main()} {open return_type int
} {
  code {make_window();
Fl::run();
return 0;



// this will be done  only once ... 
//Fl::add_timeout(1.0, Update_CB, (void*)box);

//Update_CB((void*)box2);              // force update immediately



  //  Fl_Box *box2 = new Fl_Box(10, 10, 30 , 30 );
    //box2->labelsize(28);
    //box2->levels(8);
    
   // Fl::add_timeout(1.0, Update_CB, (void*)box2);
    
//    win1->show();
   
   
   
   
      
   // Fl::repeat_timeout(1.0, Update_CB, (void*)box2);
   
//    return(Fl::run());} {}
}
